AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Tatooine Session Manager

  '
Parameters:
  Stage:
    Type: String
    AllowedValues:
    - stagging
    - production
    Default: stagging
    Description: Stage that can be added to resource names
Mappings:
  StageMap:
    stagging:
      genericname: tatooinelabs
    production:
      genericname: tatooine
Resources:
  SessionManagerApi:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Join:
        - '-'
        - - Fn::FindInMap:
            - StageMap
            - Ref: Stage
            - genericname
          - SessionManager
      StageName: prod
      EndpointConfiguration: REGIONAL
      MethodSettings:
      - LoggingLevel: ERROR
        ResourcePath: /*
        HttpMethod: '*'
  SessionManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub:
        - ${env}-sessionmanager
        - env:
            Fn::FindInMap:
            - StageMap
            - Ref: Stage
            - genericname
      CodeUri: s3://zbx-tmp/SessionManagerFunction/fde48a2f85e546684ce8a012eaf88d71
      Runtime: python3.9
      Handler: handler.handler
      Timeout: 60
      Role:
        Fn::GetAtt:
        - SessionManagerFunctionRole
        - Arn
      Events:
        login:
          Type: Api
          Properties:
            Path: /_identity/login
            Method: get
            RestApiId:
              Ref: SessionManagerApi
        logout:
          Type: Api
          Properties:
            Path: /_identity/logout
            Method: get
            RestApiId:
              Ref: SessionManagerApi
        auth:
          Type: Api
          Properties:
            Path: /_identity/auth
            Method: get
            RestApiId:
              Ref: SessionManagerApi
  DynamoSessionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub:
        - ${env}-session
        - env:
            Fn::FindInMap:
            - StageMap
            - Ref: Stage
            - genericname
      KeySchema:
      - KeyType: HASH
        AttributeName: session_id
      TimeToLiveSpecification:
        Enabled: true
        AttributeName: valid_until
      AttributeDefinitions:
      - AttributeName: session_id
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
  SessionTableReadPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub:
        - ${env}-SessionTableRO
        - env:
            Fn::FindInMap:
            - StageMap
            - Ref: Stage
            - genericname
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - dynamodb:GetItem
          Resource:
          - Fn::GetAtt:
            - DynamoSessionTable
            - Arn
          Effect: Allow
          Sid: ddb
  SessionTableReadWritePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub:
        - ${env}-SessionTableRW
        - env:
            Fn::FindInMap:
            - StageMap
            - Ref: Stage
            - genericname
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - dynamodb:DeleteItem
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          Resource:
          - Fn::GetAtt:
            - DynamoSessionTable
            - Arn
          Effect: Allow
          Sid: ddb
  SessionManagerFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - Ref: SessionTableReadWritePolicy
      Tags:
      - Value: AppName
        Key:
          Fn::FindInMap:
          - StageMap
          - Ref: Stage
          - genericname
