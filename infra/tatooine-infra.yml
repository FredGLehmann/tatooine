---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS CloudFormation stack to create infra for a serverless cognito-protected photo gallery

Parameters:
  Stage:
    Type: String
    AllowedValues:
    - stagging
    - production
    Default: stagging
    Description: Stage that can be added to resource names

Mappings:
  StageMap:
    stagging:
      AppName: tatooinelabs
      websiteTitle: tatooinelabs.zoubix.net
      website: tatooinelabs.zoubix.net
      sourcebucketname: tatooinelabs-src
      resizedbucketname: tatooinelabs-res
      webbucketname: tatooinelabs-web
      cloudfrontcertarn: arn:aws:acm:us-east-1:894260024467:certificate/31a4ebd7-d79e-4774-a029-4b4a4523f7b8
      UserPoolDomainName: tatooinelabs.auth.zoubix.net
      UserPoolDomainCertArn: arn:aws:acm:us-east-1:894260024467:certificate/caf677de-0062-4a13-ad72-e4f7c70344fe
      GoogleApiId: 731630572727-9e94k1vpv4ikqu2tt5ra2gu802cl3bes.apps.googleusercontent.com
      GoogleApiSecret: nB-Eez0q3x6AOoWUltBbAS0X
    production:
      AppName: tatooine
      websiteTitle: tatooine.zoubix.net
      website: tatooine.zoubix.net
      sourcebucketname: tatooine-src
      resizedbucketname: tatooine-res
      webbucketname: tatooine-web
      cloudfrontcertarn: arn:aws:acm:us-east-1:894260024467:certificate/15f57bb8-6527-4c12-bdb0-120e60854af7
      UserPoolDomainName: tatooine.auth.zoubix.net
      UserPoolDomainCertArn: arn:aws:acm:us-east-1:894260024467:certificate/8f6f52b0-b209-48b2-8ef2-0cde8acf2065

Resources:

  #
  # BUCKETS S3
  SourceBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
        RestrictPublicBuckets: true
      BucketName: !FindInMap
                  - StageMap
                  - !Ref Stage
                  - sourcebucketname
      Tags:
        - Key: AppName
          Value: !FindInMap
              - StageMap
              - !Ref Stage
              - AppName
        - Key: Role
          Value: Input pictures bucket

  ResizedBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
        RestrictPublicBuckets: true
      BucketName: !FindInMap
                  - StageMap
                  - !Ref Stage
                  - resizedbucketname
      Tags:
        - Key: 'AppName'
          Value: !FindInMap
              - StageMap
              - !Ref Stage
              - AppName
        - Key: 'Role'
          Value: Resized pictures bucket

  WebBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
        RestrictPublicBuckets: true
      BucketName: !FindInMap
                  - StageMap
                  - !Ref Stage
                  - webbucketname
      Tags:
        - Key: 'AppName'
          Value: !FindInMap
              - StageMap
              - !Ref Stage
              - AppName
        - Key: Role
          Value: Web site hosting

  WebBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 's3:GetObject'
            Resource: !Sub
              - '${bucket}/*'
              - bucket: !GetAtt WebBucket.Arn
            Effect: Allow
            Principal:
              AWS: !Sub
                - >-
                  arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity
                  ${id}
                - id: !Ref MyOriginAccessIdentity
      Bucket: !Ref WebBucket
    DependsOn: WebBucket

  #
  # CLOUDFRONT
  MyOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !FindInMap
              - StageMap
              - !Ref Stage
              - webbucketname

  MyWebDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Origins:
          - S3OriginConfig:
              OriginAccessIdentity: !Sub
                - 'origin-access-identity/cloudfront/${id}'
                - id: !Ref MyOriginAccessIdentity
            Id: S3-WebBucket
            DomainName: !Sub
              - '${bucket}.s3.${region}.amazonaws.com'
              - region: !Ref 'AWS::Region'
                bucket: !FindInMap
                    - StageMap
                    - !Ref Stage
                    - webbucketname
        DefaultRootObject: index.html
        PriceClass: PriceClass_All
        Enabled: 'true'
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: S3-WebBucket
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true
        ViewerCertificate:
          SslSupportMethod: sni-only
          AcmCertificateArn: !FindInMap
              - StageMap
              - !Ref Stage
              - cloudfrontcertarn
          MinimumProtocolVersion: TLSv1.2_2021
        CustomErrorResponses:
          - ErrorCode: 403
            ResponsePagePath: /error.html
            ResponseCode: 403
          - ErrorCode: 404
            ResponsePagePath: /index.html
            ResponseCode: 404
        Aliases:
          - !FindInMap
            - StageMap
            - !Ref Stage
            - website
        Comment: !FindInMap
              - StageMap
              - !Ref Stage
              - website
        Restrictions:
          GeoRestriction:
            RestrictionType: whitelist
            Locations:
              - FR
      Tags:
        - Key: AppName
          Value: !FindInMap
            - StageMap
            - !Ref Stage
            - AppName

  #
  # COGNITO
  CognitoUserPool:
    Type: 'AWS::Cognito::UserPool'
    Properties:
      UserPoolName: !FindInMap
        - StageMap
        - !Ref Stage
        - AppName
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      Policies:
        PasswordPolicy:
          RequireNumbers: true
          RequireLowercase: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7
          MinimumLength: 8
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: true
      UserPoolTags:
        AppName: !FindInMap
          - StageMap
          - !Ref Stage
          - AppName

  UserPoolDomain:
    Type: 'AWS::Cognito::UserPoolDomain'
    Properties:
      UserPoolId: !Ref CognitoUserPool
      Domain: !FindInMap
        - StageMap
        - !Ref Stage
        - UserPoolDomainName
      CustomDomainConfig:
        CertificateArn: !FindInMap
        - StageMap
        - !Ref Stage
        - UserPoolDomainCertArn

  GoogleIdp:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ProviderName: Google
      ProviderDetails:
        client_id: !FindInMap
                    - StageMap
                    - !Ref Stage
                    - GoogleApiId
        client_secret: !FindInMap
                    - StageMap
                    - !Ref Stage
                    - GoogleApiSecret
        authorize_scopes: "profile email openid"
      ProviderType: Google
      AttributeMapping:
        email: "email"

  UserPoolClient:
    Type: 'AWS::Cognito::UserPoolClient'
    Properties:
      GenerateSecret: false
      AllowedOAuthScopes:
        - openid
        - profile
      UserPoolId: !Ref CognitoUserPool
      AllowedOAuthFlowsUserPoolClient: true
      LogoutURLs:
        - !Sub
          - https://${URL}/_identity/logout
          - { URL: !FindInMap ['StageMap', !Ref Stage, 'website'] }
      AllowedOAuthFlows:
        - code
      CallbackURLs:
        - !Sub
          - https://${URL}/_identity/auth
          - { URL: !FindInMap ['StageMap', !Ref Stage, 'website'] }
      SupportedIdentityProviders:
        - !Ref GoogleIdp
